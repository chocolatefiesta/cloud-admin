{"version":3,"sources":["config.js","models/model.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","reactAdminFirebaseOptions","logging","useFileNamesInStorage","firebaseDataProvider","FirebaseDataProvider","firebaseAuthProvider","FirebaseAuthProvider","ModelFilter","props","Filter","TextInput","label","source","alwaysOn","NumberInput","ModelList","List","filters","Datagrid","rowClick","TextField","RichTextField","NumberField","ShowButton","EditButton","DeleteButton","redirect","ModelShow","Show","SimpleShowLayout","DateField","showTime","ArrayField","FileField","title","ImageField","BooleanField","ModelCreate","Create","SimpleForm","SelectInput","choices","id","name","ArrayInput","SimpleFormIterator","FileInput","ImageInput","BooleanInput","ModelEdit","Edit","App","Admin","dataProvider","authProvider","Resource","list","show","create","edit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15baa06b.chunk.js","sourcesContent":["import {\r\n    FirebaseAuthProvider,\r\n    FirebaseDataProvider,\r\n} from 'react-admin-firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDsEXIV0OTzWuRX4XBiVB4a-3w4bP_fnCs\",\r\n    authDomain: \"chocolate-fiesta-cloud.firebaseapp.com\",\r\n    databaseURL: \"https://chocolate-fiesta-cloud-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"chocolate-fiesta-cloud\",\r\n    storageBucket: \"chocolate-fiesta-cloud.appspot.com\",\r\n    messagingSenderId: \"419100703725\",\r\n    appId: \"1:419100703725:web:42a642a456befea15045e4\",\r\n    measurementId: \"G-FRZNRK641V\"\r\n};\r\n\r\nconst reactAdminFirebaseOptions = {\r\n    logging: true,\r\n    useFileNamesInStorage: true\r\n};\r\n\r\n\r\nexport const firebaseDataProvider = FirebaseDataProvider(firebaseConfig, reactAdminFirebaseOptions);\r\nexport const firebaseAuthProvider = FirebaseAuthProvider(firebaseConfig, reactAdminFirebaseOptions);\r\n","import * as React from \"react\";\r\n\r\nimport {\r\n    Datagrid,\r\n    List,\r\n    Show,\r\n    Create,\r\n    Edit,\r\n    Filter,\r\n    SimpleShowLayout,\r\n    SimpleForm,\r\n    TextField,\r\n    TextInput,\r\n    ShowButton,\r\n    EditButton,\r\n    DeleteButton,\r\n    SelectInput,\r\n    FileField,\r\n    FileInput,\r\n    NumberField,\r\n    NumberInput,\r\n    ArrayField,\r\n    ArrayInput,\r\n    SimpleFormIterator,\r\n    ImageField,\r\n    ImageInput,\r\n    BooleanField,\r\n    BooleanInput,\r\n    DateField,\r\n    RichTextField,\r\n} from \"react-admin\";\r\nimport RichTextInput from \"ra-input-rich-text\";\r\n\r\n\r\nconst ModelFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Поиск\" source=\"name\" alwaysOn />\r\n        <NumberInput label=\"Количество цветов\" source=\"colors_num\" alwaysOn />\r\n    </Filter>\r\n);\r\n\r\nexport const ModelList = props => (\r\n    <List {...props} filters={<ModelFilter />}>\r\n        <Datagrid rowClick=\"edit\">\r\n            <TextField source=\"name\" label=\"Название\"/>\r\n            <RichTextField source=\"description\" label=\"Описание\" />\r\n            <NumberField source=\"colors_num\" label=\"Количество цветов\"/>\r\n            <TextField source=\"print_time\" label=\"Время печати, минут\" />\r\n            <ShowButton label=\"\" />\r\n            <EditButton label=\"\" />\r\n            <DeleteButton label=\"\" redirect={false} />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const ModelShow = (props) => (\r\n    <Show {...props}>\r\n        <SimpleShowLayout>\r\n            <TextField source=\"name\" label=\"Название\" />\r\n            <NumberField source=\"colors_num\" label=\"Количество цветов\" />\r\n            <RichTextField source=\"description\" label=\"Описание\" />\r\n            <TextField source=\"print_time\" label=\"Время печати, минут\" />\r\n            <TextField source=\"pieces_num\" label=\"Количество изделий, шт.\" />\r\n            <TextField source=\"piece_size\" label=\"Габариты\" />\r\n            <TextField source=\"createdby\" label=\"Кем добавлено\" />\r\n            <DateField source=\"createdate\" label=\"Дата создания\" showTime={true} />\r\n            <DateField source=\"lastupdate\" label=\"Дата изменения\" showTime={true} />\r\n            <ArrayField source=\"files\" label=\"Файлы\">\r\n                <Datagrid>\r\n                    <FileField source=\"file.src\" title=\"file.title\" label=\"Файл\" />\r\n                    <TextField source=\"name\" label=\"Название\" />\r\n                </Datagrid>\r\n            </ArrayField>\r\n            <ArrayField source=\"images\" label=\"Изображения\">\r\n                <Datagrid>\r\n                    <ImageField source=\"image.src\" title=\"image.title\" label=\"Изображение\" />\r\n                    <BooleanField source=\"is_thumbnail\" label=\"Главное изображение\" />\r\n                </Datagrid>\r\n            </ArrayField>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);\r\n\r\nexport const ModelCreate = (props) => (\r\n    <Create {...props} >\r\n        <SimpleForm>\r\n            <TextInput source=\"name\" label=\"Название\" />\r\n            <RichTextInput source=\"description\" label=\"Описание\" />\r\n            <TextInput source=\"print_time\" label=\"Время печати, минут\" />\r\n            <TextInput source=\"pieces_num\" label=\"Количество изделий, шт.\" />\r\n            <TextInput source=\"piece_size\" label=\"Габариты\" />\r\n\r\n            <SelectInput source=\"colors_num\" label=\"Количество цветов\" choices={[\r\n                { id: \"Одноцветная\", name: \"Одноцветная\" },\r\n                { id: \"Двухцветная\", name: \"Двухцветная\" },\r\n            ]} />\r\n            <ArrayInput source=\"files\">\r\n                <SimpleFormIterator>\r\n                    <FileInput source=\"file\" label=\"Файл\">\r\n                        <FileField source=\"src\" title=\"title\" />\r\n                    </FileInput>\r\n                    <TextInput source=\"name\" label=\"Название файла\" />\r\n                </SimpleFormIterator>\r\n            </ArrayInput>\r\n            <ArrayInput source=\"images\">\r\n                <SimpleFormIterator>\r\n                    <ImageInput source=\"image\" label=\"Файл\">\r\n                        <ImageField source=\"src\" title=\"title\" />\r\n                    </ImageInput>\r\n                    <BooleanInput source=\"is_thumbnail\" label=\"Главное изображение\" />\r\n                </SimpleFormIterator>\r\n            </ArrayInput>\r\n        </SimpleForm>\r\n    </Create>\r\n);\r\n\r\nexport const ModelEdit = (props) => (\r\n    <Edit {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"name\" label=\"Название\" />\r\n            <RichTextInput source=\"description\" label=\"Описание\" />\r\n            <TextInput source=\"print_time\" label=\"Время печати, минут\" />\r\n            <TextInput source=\"pieces_num\" label=\"Количество изделий, шт.\" />\r\n            <TextInput source=\"piece_size\" label=\"Габариты\" />\r\n            <SelectInput source=\"colors_num\" label=\"Количество цветов\" choices={[\r\n                { id: \"Одноцветная\", name: \"Одноцветная\" },\r\n                { id: \"Двухцветная\", name: \"Двухцветная\" },\r\n            ]} />\r\n            <ArrayInput source=\"files\">\r\n                <SimpleFormIterator>\r\n                    <FileInput source=\"file\" label=\"Файл\">\r\n                        <FileField source=\"src\" title=\"title\"/>\r\n                    </FileInput>\r\n                    <TextInput source=\"name\" label=\"Название файла\" />\r\n                </SimpleFormIterator>\r\n            </ArrayInput>\r\n            <ArrayInput source=\"images\">\r\n                <SimpleFormIterator>\r\n                    <ImageInput source=\"image\" label=\"Изображение\">\r\n                        <ImageField source=\"src\" title=\"title\" />\r\n                    </ImageInput>\r\n                    <BooleanInput source=\"is_thumbnail\" label=\"Главное изображение\" />\r\n                </SimpleFormIterator>\r\n            </ArrayInput>\r\n        </SimpleForm>\r\n    </Edit>\r\n);","import * as React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport { firebaseDataProvider, firebaseAuthProvider } from \"./config\";\nimport { ModelList, ModelCreate, ModelShow, ModelEdit } from \"./models/model\";\n\n\nconst App = () => (\n  <Admin dataProvider={firebaseDataProvider} authProvider={firebaseAuthProvider}>\n    <Resource name=\"storage/model-library/public\" list={ModelList} show={ModelShow} create={ModelCreate} edit={ModelEdit}/>\n  </Admin>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}